{"version":3,"sources":["blog.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;AAKb,IAAI,MAAM,GAAG,kBAAQ,MAAM,EAAE,CAAC;;AAE9B,IAAI,IAAI,GAAG;AACT,OAAK,EAAG,eAAC,GAAG,EAAE,GAAG,EAAK;AACpB,QAAI,OAAO,GAAG;AACZ,SAAG,EAAE,4FAA4F;AACjG,YAAM,EAAE,KAAK;KACd,CAAA;;AAED,2BAAQ,OAAO,EAAE,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAK;AAC1C,UAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;AACzC,YAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC7B,YAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AACxB,YAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG,EAAK;AACrC,cAAI,OAAO,GAAG,EAAE,CAAC;AACjB,iBAAO,CAAC,OAAO,GAAI,IAAI,CAAC,OAAO,CAAC;AAChC,cAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE;AACzB,mBAAO,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;WACtC;AACD,iBAAO,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,CAAC;AACxD,iBAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3B,iBAAO,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;AACrC,iBAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/B,iBAAO,OAAO,CAAC;SAChB,CAAC,CAAC;AACH,WAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;OACzC;KACF,CAAC,CAAA;GACH,AAAC;AACF,OAAK,EAAG,eAAC,GAAG,EAAE,GAAG,EAAK;AACpB,QAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AAC3B,WAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpB,QAAI,OAAO,GAAG;AACZ,SAAG,EAAE,4EAA4E,GAAG,MAAM;AAC1F,YAAM,EAAE,KAAK;KACd,CAAA;;AAED,2BAAQ,OAAO,EAAE,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAK;AAC1C,UAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;AACzC,YAAI,KAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAE5B,YAAI,OAAO,GAAG;AACZ,0BAAgB,EAAE,KAAI,CAAC,gBAAgB,CAAC;AACxC,cAAI,EAAE,IAAI,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE;AAC9C,eAAK,EAAE,KAAI,CAAC,KAAK;AACjB,gBAAM,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI;AACxB,iBAAO,EAAE,KAAI,CAAC,OAAO;SACtB,CAAC;;AAEF,WAAG,CAAC,MAAM,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;OAC5C;KACF,CAAC,CAAA;GACH,AAAC;CACH,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC","file":"routes/blog.js","sourcesContent":["'use strict';\n\nimport express    from 'express';\nimport request    from 'request';\n\nlet router = express.Router();\n\nlet blog = {\n  index: ((req, res) => {\n    let options = {\n      uri: 'https://public-api.wordpress.com/rest/v1.1/sites/innovatorylife.com/posts?category=company',\n      method: 'GET'\n    }\n\n    request(options, (error, response, body) => {\n      if (!error && response.statusCode === 200) {\n        let blogs = JSON.parse(body);\n        let posts = blogs.posts;\n        let postArr = posts.map((post, idx) => {\n          let tempObj = {};\n          tempObj.excerpt =  post.excerpt;\n          if(post[\"featured_image\"]) {\n            tempObj.img = post[\"featured_image\"];\n          }\n          tempObj.date = new Date(post.date).toLocaleDateString();\n          tempObj.title = post.title;\n          tempObj.postUrl = \"/blog/\" + post.ID;\n          tempObj.excerpt = post.excerpt;\n          return tempObj;\n        });\n        res.render('blog', {blogBody: postArr});\n      }\n    })\n  }),\n  posts: ((req, res) => {\n    let postId = req.params.id;\n    console.log(postId);\n    let options = {\n      uri: 'https://public-api.wordpress.com/rest/v1.1/sites/innovatorylife.com/posts/' + postId,\n      method: 'GET'\n    }\n\n    request(options, (error, response, body) => {\n      if (!error && response.statusCode === 200) {\n        let blog = JSON.parse(body);\n\n        let blogObj = {\n          \"featured_image\": blog[\"featured_image\"],\n          date: new Date(blog.date).toLocaleDateString(),\n          title: blog.title,\n          author: blog.author.name,\n          content: blog.content\n        };\n\n        res.render('blog-single', {blog: blogObj});\n      }      \n    })\n  })\n}\n\nmodule.exports = blog;"],"sourceRoot":"/Users/kianosh/Dropbox/Private/Projects/Cielo-concepts-website/Cielo-site/es6"}