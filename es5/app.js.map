{"version":3,"sources":["app.js"],"names":["app","set","join","__dirname","engine","use","json","urlencoded","extended","static","req","res","next","err","Error","status","get","render","message","error","server_port","process","env","PORT","server_host","server","listen","console","log","address","port"],"mappings":"AAAA;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA;AACA,IAAIA,MAAM,wBAAV;;AAGAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,IAAII,MAAJ,CAAW,KAAX,EAAkB,sCAAlB;;AAEAJ,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAN,IAAIK,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAR,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQ,kBAAQI,MAAR,CAAe,eAAKP,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEAH,IAAIK,GAAJ,CAAQ,GAAR;AACA;AACA;AACA;AACA;;AAEA;AACAL,IAAIK,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA,IAAIb,IAAIgB,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpChB,MAAIK,GAAJ,CAAQ,UAACQ,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BD,QAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,QAAIM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,eAASL,IAAIK,OADK;AAElBC,aAAON;AAFW,KAApB;AAID,GAND;AAOD;;AAEDb,IAAIK,GAAJ,CAAQ,UAACQ,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BD,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,aAASL,IAAIK,OADK;AAElBC,WAAO;AAFW,GAApB;AAID,CAND;;AAQA,IAAMC,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAxC;AACA,IAAMC,cAAc,SAApB;;AAEAxB,IAAIC,GAAJ,CAAQ,MAAR,EAAgBmB,WAAhB;AACApB,IAAIC,GAAJ,CAAQ,MAAR,EAAgBuB,WAAhB;;AAEA,IAAMC,SAASzB,IAAI0B,MAAJ,CACb1B,IAAIgB,GAAJ,CAAQ,MAAR,CADa,EAEbhB,IAAIgB,GAAJ,CAAQ,MAAR,CAFa,EAGb;AAAA,SAAMW,QAAQC,GAAR,CAAY,kCAAkCH,OAAOI,OAAP,GAAiBC,IAA/D,CAAN;AAAA,CAHa,CAAf;;kBAMe9B,G","file":"app.js","sourcesContent":["\"use strict\";\nimport express          from 'express';\nimport path             from 'path';\nimport favicon          from 'serve-favicon';\nimport logger           from 'morgan';\nimport cookieParser     from 'cookie-parser';\nimport bodyParser       from 'body-parser';\nimport fs               from 'fs';\nimport { createEngine } from 'express-react-views';\nimport routes           from './routes/index';\n\n//using let\nlet app = express();\n\n\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'jsx');\napp.engine('jsx', createEngine());\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, '../assets')));\n\napp.use('/', routes);\n// app.use('/portfolio/:name', routes);\n// app.use('/email', routes);\n// app.use('/blog', routes);\n// app.use('/blog/:id', routes);\n\n// using arrow syntax\napp.use((req, res, next) => {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\nif (app.get('env') === 'development') {\n  app.use((err, req, res, next) => {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\napp.use((err, req, res, next) => {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\nconst server_port = process.env.PORT || 5001;\nconst server_host = '0.0.0.0';\n\napp.set('port', server_port);\napp.set('host', server_host);\n\nconst server = app.listen(\n  app.get('port'),\n  app.get('host'),\n  () => console.log('Express is listening on port ' + server.address().port)\n);\n\nexport default app;\n"],"sourceRoot":"/Users/john/Code/the-site/es6"}